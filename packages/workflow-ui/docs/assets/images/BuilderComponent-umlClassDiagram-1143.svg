<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="606px" preserveAspectRatio="none" style="width:727px;height:606px;background:#FFFFFF;" version="1.1" viewBox="0 0 727 606" width="727px" zoomAndPan="magnify"><defs><filter height="300%" id="f1lo7hyevbd84m" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[07fd1f4f349947f6a9284e81fc80cb25]
class BuilderComponent<E>--><rect codeLine="3" fill="#FEFECE" filter="url(#f1lo7hyevbd84m)" height="501.4277" id="BuilderComponent&lt;E&gt;" style="stroke:#A80036;stroke-width:1.5;" width="706" x="7" y="91"/><ellipse cx="289.25" cy="107" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M291.7231,113.1431 Q291.1421,113.4419 290.5029,113.5913 Q289.8638,113.7407 289.1582,113.7407 Q286.6514,113.7407 285.3315,112.0889 Q284.0117,110.437 284.0117,107.3159 Q284.0117,104.1865 285.3315,102.5347 Q286.6514,100.8828 289.1582,100.8828 Q289.8638,100.8828 290.5112,101.0322 Q291.1587,101.1816 291.7231,101.4805 L291.7231,104.2031 Q291.0923,103.6221 290.4988,103.3523 Q289.9053,103.0825 289.2744,103.0825 Q287.9297,103.0825 287.2449,104.1492 Q286.5601,105.2158 286.5601,107.3159 Q286.5601,109.4077 287.2449,110.4744 Q287.9297,111.541 289.2744,111.541 Q289.9053,111.541 290.4988,111.2712 Q291.0923,111.0015 291.7231,110.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="133" x="309.75" y="111.5352">BuilderComponent&lt;E&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="712" y1="123" y2="123"/><ellipse cx="18" cy="134" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="267" x="27" y="137.6348">actionAdded : EventEmitter&lt;ActionAddition&lt;E&gt;&gt;</text><ellipse cx="18" cy="146.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="27" y="150.5898">actions : WorkflowNode&lt;E&gt;[]</text><ellipse cx="18" cy="159.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="27" y="163.5449">diagram : string</text><ellipse cx="18" cy="172.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="211" x="27" y="176.5">diagramChange : EventEmitter&lt;string&gt;</text><ellipse cx="18" cy="185.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="257" x="27" y="189.4551">eventAdded : EventEmitter&lt;EventAddition&lt;E&gt;&gt;</text><ellipse cx="18" cy="198.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="153" x="27" y="202.4102">events : WorkflowNode&lt;E&gt;[]</text><ellipse cx="18" cy="211.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="265" x="27" y="215.3652">itemChanged : EventEmitter&lt;InputChanged&lt;E&gt;&gt;</text><ellipse cx="18" cy="224.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="27" y="228.3203">listTemplate : TemplateRef&lt;RecordOfAnyType&gt;</text><ellipse cx="18" cy="237.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="164" x="27" y="241.2754">nodeList : WorkflowNode&lt;E&gt;[]</text><ellipse cx="18" cy="250.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="252" x="27" y="254.2305">nodePopup : TemplateRef&lt;RecordOfAnyType&gt;</text><ellipse cx="18" cy="263.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="282" x="27" y="267.1855">numberTemplate : TemplateRef&lt;RecordOfAnyType&gt;</text><ellipse cx="18" cy="276.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="27" y="280.1406">processId : string</text><ellipse cx="18" cy="289.4609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="212" x="27" y="293.0957">selectedActions : ActionWithInput&lt;E&gt;[]</text><ellipse cx="18" cy="302.416" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="200" x="27" y="306.0508">selectedEvents : EventWithInput&lt;E&gt;[]</text><ellipse cx="18" cy="315.3711" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="199" x="27" y="319.0059">state : StateMap&lt;RecordOfAnyType&gt;</text><ellipse cx="18" cy="328.3262" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="27" y="331.9609">stateChange : EventEmitter&lt;StateMap&lt;RecordOfAnyType&gt;&gt;</text><ellipse cx="18" cy="341.2813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="110" x="27" y="344.916">templateMap : object</text><ellipse cx="18" cy="354.2363" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="27" y="357.8711">textTemplate : TemplateRef&lt;RecordOfAnyType&gt;</text><ellipse cx="18" cy="367.1914" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="27" y="370.8262">triggerEvents : WorkflowNode&lt;E&gt;[]</text><ellipse cx="18" cy="380.1465" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="135" x="27" y="383.7813">types : typeof NodeTypes</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="712" y1="390.1016" y2="390.1016"/><ellipse cx="18" cy="401.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="680" x="27" y="404.7363">addValue(element: NodeWithInput&lt;E&gt;, input: WorkflowPrompt, value: AllowedValues | AllowedValuesMap, select: boolean) : void</text><ellipse cx="18" cy="414.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="137" x="27" y="417.6914">build() : Promise&lt;string&gt;</text><ellipse cx="18" cy="427.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="645" x="27" y="430.6465">createCallback(element: NodeWithInput&lt;E&gt;, input: WorkflowPrompt, popper: NgxPopperjsContentComponent) : function</text><ellipse cx="18" cy="439.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="255" x="27" y="443.6016">getInputValue(target: null | EventTarget) : string</text><ellipse cx="18" cy="452.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="122" x="27" y="456.5566">ngAfterViewInit() : void</text><ellipse cx="18" cy="465.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="311" x="27" y="469.5117">ngOnChanges(changes: SimpleChanges) : Promise&lt;void&gt;</text><ellipse cx="18" cy="478.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="27" y="482.4668">ngOnInit() : void</text><ellipse cx="18" cy="491.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="27" y="495.4219">onNodeAdd(node: WorkflowNode&lt;E&gt;, id: string) : void</text><ellipse cx="18" cy="504.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="297" x="27" y="508.377">onNodeRemove(type: NodeTypes, index: number) : void</text><ellipse cx="18" cy="517.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="27" y="521.332">openPopup(type: NodeTypes) : void</text><ellipse cx="18" cy="530.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="27" y="534.2871">updateDiagram() : Promise&lt;void&gt;</text><ellipse cx="18" cy="543.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="474" x="27" y="547.2422">updateState(node: WorkflowNode&lt;E&gt;, inputs: WorkflowPrompt[], remove: boolean) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="553.5625"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="452" x="27" y="560.1973">handleSubsequentInputs(element: NodeWithInput&lt;E&gt;, input: WorkflowPrompt) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="566.5176"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="27" y="573.1523">mergeState</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="line-through" textLength="92" x="87" y="573.1523">(stateA: StateMap</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="line-through" textLength="92" x="179" y="573.1523">, stateB: StateMap</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="line-through" textLength="85" x="271" y="573.1523">) : StateMap&lt;S&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="579.4727"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="27" y="586.1074">restoreState(state: StateMap&lt;RecordOfAnyType&gt;) : void</text><!--MD5=[102de254140a193826c5a7d2ce3cf539]
class OnInit--><rect codeLine="40" fill="#FEFECE" filter="url(#f1lo7hyevbd84m)" height="24.1328" id="OnInit" style="stroke:#A80036;stroke-width:1.5;" width="39" x="295.5" y="7"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="33" x="298.5" y="23.6016">OnInit</text><!--MD5=[f682bdea182d2bdafe71fb3a23a4f0f9]
class OnChanges--><rect codeLine="43" fill="#FEFECE" filter="url(#f1lo7hyevbd84m)" height="24.1328" id="OnChanges" style="stroke:#A80036;stroke-width:1.5;" width="71" x="369.5" y="7"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="65" x="372.5" y="23.6016">OnChanges</text><!--MD5=[48fafd9f0b7c58c739b03789015d8575]
reverse link OnInit to BuilderComponent<E>--><path codeLine="42" d="M319.37,51.09 C320.92,62.19 322.83,75.74 324.95,90.85 " fill="none" id="OnInit-backto-BuilderComponent&lt;E&gt;" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="312.4,51.81,316.55,31.03,326.26,49.86,312.4,51.81" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[fc64f246c00085476c59c9b196f530d3]
reverse link OnChanges to BuilderComponent<E>--><path codeLine="45" d="M400.63,51.09 C399.08,62.19 397.17,75.74 395.05,90.85 " fill="none" id="OnChanges-backto-BuilderComponent&lt;E&gt;" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="393.74,49.86,403.45,31.03,407.6,51.81,393.74,49.86" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[155aee1500eab5f3cf25d29b1412d211]
@startuml
hide empty methods
hide empty fields
class "BuilderComponent<E>" {
    +actionAdded : EventEmitter<ActionAddition<E>>
    +actions : WorkflowNode<E>[]
    +diagram : string
    +diagramChange : EventEmitter<string>
    +eventAdded : EventEmitter<EventAddition<E>>
    +events : WorkflowNode<E>[]
    +itemChanged : EventEmitter<InputChanged<E>>
    +listTemplate : TemplateRef<RecordOfAnyType>
    +nodeList : WorkflowNode<E>[]
    +nodePopup : TemplateRef<RecordOfAnyType>
    +numberTemplate : TemplateRef<RecordOfAnyType>
    +processId : string
    +selectedActions : ActionWithInput<E>[]
    +selectedEvents : EventWithInput<E>[]
    +state : StateMap<RecordOfAnyType>
    +stateChange : EventEmitter<StateMap<RecordOfAnyType>>
    +templateMap : object
    +textTemplate : TemplateRef<RecordOfAnyType>
    +triggerEvents : WorkflowNode<E>[]
    +types : typeof NodeTypes
    +addValue(element: NodeWithInput<E>, input: WorkflowPrompt, value: AllowedValues | AllowedValuesMap, select: boolean) : void
    +build() : Promise<string>
    +createCallback(element: NodeWithInput<E>, input: WorkflowPrompt, popper: NgxPopperjsContentComponent) : function
    +getInputValue(target: null | EventTarget) : string
    +ngAfterViewInit() : void
    +ngOnChanges(changes: SimpleChanges) : Promise<void>
    +ngOnInit() : void
    +onNodeAdd(node: WorkflowNode<E>, id: string) : void
    +onNodeRemove(type: NodeTypes, index: number) : void
    +openPopup(type: NodeTypes) : void
    +updateDiagram() : Promise<void>
    +updateState(node: WorkflowNode<E>, inputs: WorkflowPrompt[], remove: boolean) : void
    -handleSubsequentInputs(element: NodeWithInput<E>, input: WorkflowPrompt) : void
    -mergeState<S>(stateA: StateMap<S>, stateB: StateMap<S>) : StateMap<S>
    -restoreState(state: StateMap<RecordOfAnyType>) : void
}
class "OnInit"
hide "OnInit" circle
"OnInit" <|.. "BuilderComponent<E>"
class "OnChanges"
hide "OnChanges" circle
"OnChanges" <|.. "BuilderComponent<E>"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 22:16:50 IST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: IN
--></g></svg>