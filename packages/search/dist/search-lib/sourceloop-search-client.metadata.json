{"__symbolic":"module","version":4,"metadata":{"SearchLibModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":6,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"SearchComponent"}],"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":8,"character":12},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":8,"character":26},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClientModule","line":8,"character":39}],"exports":[{"__symbolic":"reference","name":"SearchComponent"}]}]}],"members":{}},"SearchComponent":{"__symbolic":"class","arity":1,"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":34,"character":1},"arguments":[{"selector":"sourceloop-search","providers":[{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR","line":40,"character":15},"useExisting":{"__symbolic":"reference","name":"SearchComponent"},"multi":true}],"template":"<div\n  class=\"search-container\"\n  [ngClass]=\"suggestionsDisplay ? 'search-focus-in' : 'search-focus-out'\"\n>\n  <form>\n    <div class=\"flex-box align-items-center justify-content-between\">\n      <div class=\"search-column-left\">\n        <div class=\"flex-box align-items-center justify-content-between\">\n          <svg\n            width=\"16\"\n            height=\"16\"\n            viewBox=\"0 0 16 16\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M2 6.5C2 8.981 4.0185 11 6.5 11C8.981 11 11 8.981 11 6.5C11 4.0185 8.981 2 6.5 2C4.0185 2 2 4.0185 2 6.5ZM1 6.5C1 3.4625 3.4625 1 6.5 1C9.5375 1 12 3.4625 12 6.5C12 9.5375 9.5375 12 6.5 12C3.4625 12 1 9.5375 1 6.5ZM10.7236 11.4306C10.9771 11.2131 11.2131 10.9771 11.4306 10.7236L15.0001 14.2926L14.2931 15.0001L10.7236 11.4306Z\"\n              fill=\"#9C9C9C\"\n            />\n          </svg>\n          <input\n            class=\"search-input\"\n            autocomplete=\"off\"\n            type=\"text\"\n            [placeholder]=\"config.placeholder\"\n            #searchInput\n            name=\"searchInput\"\n            (focus)=\"showSuggestions()\"\n            (blur)=\"hideSuggestions()\"\n            [(ngModel)]=\"searchBoxInput\"\n            (keyup)=\"hitSearchApi($event)\"\n            placeholder=\"Search\"\n            (ngModelChange)=\"onChange(this.searchBoxInput)\"\n            [disabled]=\"disabled\"\n          />\n        </div>\n      </div>\n      <div class=\"search-column-right\">\n        <button\n          *ngIf=\"searchBoxInput\"\n          type=\"button\"\n          class=\"clear-button\"\n          id=\"clear-button\"\n          (click)=\"resetInput()\"\n        >\n          Clear x\n        </button>\n        <ng-container *ngIf=\"!config.hideCategorizeButton\">\n          <button class=\"category-button\" (click)=\"showCategory()\">\n            {{ category !== 'All' ? category.displayName : category }}\n            <svg height=\"14\" viewBox=\"0 0 14 14\" width=\"14\">\n              <polygon\n                [attr.points]=\"\n                  categoryDisplay\n                    ? '0,14 7,6, 14,14, 7,6, 0,14'\n                    : '0,6 7,14, 14,6, 7,14, 0,6'\n                \"\n                style=\"stroke: 'inherit'; fill: 'inherit'\"\n              ></polygon>\n            </svg>\n          </button>\n          <ng-container *ngIf=\"categoryDisplay\">\n            <div class=\"category-overlay\" (click)=\"hideCategory()\"></div>\n            <div class=\"category-popup\">\n              <ul>\n                <li (click)=\"setCategory('All', $event)\" class=\"category\">\n                  All\n                </li>\n                <li\n                  *ngFor=\"let model of config.models\"\n                  (click)=\"setCategory(model, $event)\"\n                  class=\"category\"\n                >\n                  {{ model.displayName }}\n                </li>\n              </ul>\n            </div>\n          </ng-container>\n        </ng-container>\n      </div>\n    </div>\n  </form>\n\n  <div *ngIf=\"suggestionsDisplay\" class=\"search-popup\">\n    <ng-container *ngIf=\"config.categorizeResults\">\n      <div class=\"search-item-info\" *ngIf=\"category === 'All'\">\n        You are searching on {{ category }}\n      </div>\n      <div class=\"search-item-info\" *ngIf=\"category !== 'All'\">\n        You are searching on {{ category.displayName }}\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"searchBoxInput\">\n      <ng-container *ngIf=\"config.categorizeResults\">\n        <div class=\"search-result\" *ngFor=\"let model of config.models\">\n          <h3\n            *ngIf=\"getSuggestionsFromModelName(model.name)\"\n            class=\"suggestions-heading\"\n          >\n            <img\n              *ngIf=\"model.imageUrl\"\n              [src]=\"model.imageUrl\"\n              [alt]=\"model.displayName\"\n            />\n            {{ model.displayName }}({{ relevantSuggestions?.length }})\n          </h3>\n          <ul>\n            <li\n              *ngFor=\"let suggestion of relevantSuggestions\"\n              (mousedown)=\"populateValue(suggestion, $event)\"\n              class=\"suggestions\"\n              [innerHTML]=\"\n                boldString(\n                  suggestion[config.displayPropertyName],\n                  searchBoxInput\n                )\n              \"\n            ></li>\n          </ul>\n        </div>\n      </ng-container>\n      <ng-container *ngIf=\"!config.categorizeResults\">\n        <div class=\"search-result\">\n          <ul>\n            <li\n              *ngFor=\"let suggestion of suggestions\"\n              (mousedown)=\"populateValue(suggestion, $event)\"\n            >\n              <!--Need to call fetchModelImageUrlFromSuggestion as each suggestion can come from different model-->\n              <img\n                *ngIf=\"fetchModelImageUrlFromSuggestion(suggestion)\"\n                class=\"suggestions-categorize-false\"\n                [src]=\"fetchModelImageUrlFromSuggestion(suggestion)\"\n                style=\"margin-right: 5px\"\n                alt=\"Img\"\n              />\n              <p\n                [innerHTML]=\"\n                  boldString(\n                    suggestion[config.displayPropertyName],\n                    searchBoxInput\n                  )\n                \"\n                style=\"display: inline\"\n              ></p>\n            </li>\n          </ul>\n        </div>\n      </ng-container>\n    </ng-container>\n\n    <ng-container *ngIf=\"!config.hideRecentSearch && recentSearches.length > 0\">\n      <div class=\"recent-searches\">\n        <h3 class=\"suggestions-heading\">Recent Searches</h3>\n        <ul>\n          <li\n            *ngFor=\"let recentSearch of recentSearches\"\n            class=\"suggestions\"\n            (mousedown)=\"populateValueRecentSearch(recentSearch, $event)\"\n          >\n            <svg\n              width=\"16\"\n              height=\"16\"\n              viewBox=\"0 0 16 16\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M2 6.5C2 8.981 4.0185 11 6.5 11C8.981 11 11 8.981 11 6.5C11 4.0185 8.981 2 6.5 2C4.0185 2 2 4.0185 2 6.5ZM1 6.5C1 3.4625 3.4625 1 6.5 1C9.5375 1 12 3.4625 12 6.5C12 9.5375 9.5375 12 6.5 12C3.4625 12 1 9.5375 1 6.5ZM10.7236 11.4306C10.9771 11.2131 11.2131 10.9771 11.4306 10.7236L15.0001 14.2926L14.2931 15.0001L10.7236 11.4306Z\"\n                fill=\"#9C9C9C\"\n              />\n            </svg>\n            <span>{{ recentSearch.match }}</span>\n          </li>\n        </ul>\n      </div>\n    </ng-container>\n  </div>\n</div>\n","styles":[".search-container{border:1px solid transparent;border-radius:4px;background-color:#f7f7f7;padding:0 15px;position:relative;width:inherit}.search-container:hover{outline:2px solid #91263b}.search-container:hover.search-focus-in{outline:none}.search-container.search-focus-in{outline:none;box-shadow:0 0 4px #0003;background-color:#fff;border-bottom:0;border-radius:4px 4px 0 0}.search-container.search-focus-in:hover{outline:0}.search-container .flex-box{display:flex}.search-container .align-items-center{align-items:center}.search-container .justify-content-between{justify-content:space-between}.search-container .search-column-left{flex-direction:column;width:100%}.search-container .search-column-right{flex-direction:column;text-align:right}.search-container .search-column-right select{border:0;outline:0;width:60px;background-color:transparent;margin-left:10px;font-size:12px;color:#333;border-left:1px solid #d1d1d1;padding-left:4px}.search-container .search-symbol{color:#d1d1d1;font-size:12px;display:inline-block}.search-container .search-input{padding:0 .75rem;font-size:14px;font-weight:400;line-height:1.5;color:#333;background-color:transparent;border:0;border-radius:0;width:100%;box-sizing:border-box;height:38px;display:inline-block}.search-container .search-input::-moz-placeholder{color:#d1d1d1}.search-container .search-input:-ms-input-placeholder{color:#d1d1d1}.search-container .search-input::placeholder{color:#d1d1d1}.search-container .search-input:focus{outline:none}.search-container .clear-button{background-color:transparent;border:0 solid #ced4da;color:#d1d1d1;font-size:12px;cursor:pointer}.search-container .clear-button span{display:inline-block;margin-left:5px;font-size:14px}.search-container .category-button{padding:0 .75rem;font-size:14px;font-weight:400;line-height:1.5;color:#d1d1d1;cursor:pointer;border:none;background:transparent;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.search-container .category-button svg{stroke:#d1d1d1}.search-container .category-overlay{top:0;left:0;position:fixed;z-index:9998;background-color:transparent;width:100%;height:100%}.search-container .category-popup{overflow-x:hidden;overflow-y:auto;position:absolute;top:100%;right:0px;z-index:9999;background-color:#fff;box-shadow:0 5px 4px #0003;border-radius:0 0 4px 4px;width:-webkit-max-content;width:-moz-max-content;width:max-content;font-size:11.2px!important}.search-container .category-popup ul{padding:0;margin:0}.search-container .category-popup ul li{list-style:none;font-size:1rem;font-weight:400;line-height:1.5;color:#333;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.search-container .category-popup ul li.category{align-items:center;display:flex;cursor:pointer;padding:0 16px;border-bottom:1px solid #f2f2f2;font-family:\"Rakuten Sans\",sans-serif;font-size:12.8px;line-height:32px;letter-spacing:0px;text-align:left}.search-container .category-popup ul li.category:hover{background-color:#fee8e8}.search-container .category-popup ul li.category svg{margin-right:5px}.search-container .category-popup ul li.suggestions-categorize-false:hover{background-color:#fee8e8}.search-container .search-popup{padding:0 15px 15px;margin:0;max-height:80vh;overflow-x:hidden;overflow-y:auto;position:absolute;top:calc(100% - 2px);left:-1px;right:-1px;z-index:9999;background-color:#fff;box-shadow:0 5px 4px #0003;border-radius:0 0 4px 4px}.search-container .search-popup hr{border:0;border-top:1px solid #ebebeb;margin:0;position:-webkit-sticky;position:sticky;top:0;padding:0 0 15px;z-index:1}.search-container .search-popup .search-item-info{color:#91263b;text-align:center;font-size:12px;margin-bottom:15px}.search-container .search-popup ul{padding:0;margin:0}.search-container .search-popup ul li{list-style:none;font-size:1rem;font-weight:400;line-height:1.5;color:#333}.search-container .search-popup ul li.suggestions{font-size:15px;line-height:36px;padding:0 15px 0 44px;align-items:center;display:flex;cursor:pointer}.search-container .search-popup ul li.suggestions:hover{background-color:#fee8e8}.search-container .search-popup ul li.suggestions svg{margin-right:5px}.search-container .search-popup ul li.suggestions-categorize-false:hover{background-color:#fee8e8}.search-container .search-popup .search-result{padding:10px 0 0;margin:0 -15px}.search-container .search-popup .search-result.no-categorize-result ul{width:100%;padding:0;margin:0 0 10px}.search-container .search-popup .search-result.no-categorize-result ul li{font-size:15px;line-height:36px;padding:0 15px 0 31px;display:flex;align-items:center;cursor:pointer}.search-container .search-popup .search-result.no-categorize-result ul li:hover{background-color:#fee8e8}.search-container .search-popup .search-result.no-categorize-result ul li img{width:18px;margin-right:9px}.search-container .search-popup .suggestions-heading{color:#9c9c9c;font-size:14px;font-weight:normal;margin:0 0 10px 17px;display:flex;align-items:center;position:relative}.search-container .search-popup .suggestions-heading .show-more{position:absolute;right:20px;color:#d1d1d1;font-size:12px;cursor:pointer;text-decoration:none}.search-container .search-popup .suggestions-heading .show-more :hover{text-decoration:underline}.search-container .search-popup .suggestions-heading img{width:18px;margin-right:9px}.search-container .search-popup .recent-searches{padding:10px 0 0;margin:0 -15px}.search-container .search-popup .recent-searches .suggestions-heading{margin-left:30px}.search-container .search-popup .recent-searches li.suggestions{padding-left:31px}\n"]}]}],"members":{"config":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":57,"character":3}}]}],"clicked":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":59,"character":3}}]}],"searched":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":60,"character":3}}]}],"searchInputElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":68,"character":3},"arguments":["searchInput"]}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":71,"character":5},"arguments":[{"__symbolic":"reference","name":"SEARCH_SERVICE_TOKEN"}]}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":73,"character":5},"arguments":[{"__symbolic":"reference","module":"@angular/core","name":"PLATFORM_ID","line":73,"character":12}]}]],"parameters":[{"__symbolic":"reference","name":"ISearchService"},{"__symbolic":"error","message":"Expression form not supported","line":73,"character":54,"module":"./lib/search/search.component"}]}],"ngOnInit":[{"__symbolic":"method"}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}],"setDisabledState":[{"__symbolic":"method"}],"getSuggestions":[{"__symbolic":"method"}],"getRecentSearches":[{"__symbolic":"method"}],"hitSearchApi":[{"__symbolic":"method"}],"populateValue":[{"__symbolic":"method"}],"populateValueRecentSearch":[{"__symbolic":"method"}],"fetchModelImageUrlFromSuggestion":[{"__symbolic":"method"}],"getSuggestionsFromModelName":[{"__symbolic":"method"}],"boldString":[{"__symbolic":"method"}],"hideSuggestions":[{"__symbolic":"method"}],"showSuggestions":[{"__symbolic":"method"}],"focusInput":[{"__symbolic":"method"}],"setCategory":[{"__symbolic":"method"}],"showCategory":[{"__symbolic":"method"}],"hideCategory":[{"__symbolic":"method"}],"resetInput":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"_categoryToSourceName":[{"__symbolic":"method"}]}},"Configuration":{"__symbolic":"class","arity":1,"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Configuration"}]}]}},"ISearchQuery":{"__symbolic":"interface"},"IModel":{"__symbolic":"interface"},"IReturnType":{"__symbolic":"interface"},"IDefaultReturnType":{"__symbolic":"interface"},"ISearchService":{"__symbolic":"interface"},"SEARCH_SERVICE_TOKEN":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/core","name":"InjectionToken","line":35,"character":6},"arguments":["Search_Service_Token"]},"RecentSearchEvent":{"__symbolic":"interface"},"ItemClickedEvent":{"__symbolic":"interface"},"TypeEvent":{"__symbolic":"interface"},"DEFAULT_LIMIT":20,"DEFAULT_ORDER":[],"DEBOUNCE_TIME":1000,"DEFAULT_SAVE_IN_RECENTS":true},"origins":{"SearchLibModule":"./lib/search-lib.module","SearchComponent":"./lib/search/search.component","Configuration":"./lib/lib-configuration","ISearchQuery":"./lib/types","IModel":"./lib/types","IReturnType":"./lib/types","IDefaultReturnType":"./lib/types","ISearchService":"./lib/types","SEARCH_SERVICE_TOKEN":"./lib/types","RecentSearchEvent":"./lib/types","ItemClickedEvent":"./lib/types","TypeEvent":"./lib/types","DEFAULT_LIMIT":"./lib/types","DEFAULT_LIMIT_TYPE":"./lib/types","DEFAULT_ORDER":"./lib/types","DEBOUNCE_TIME":"./lib/types","DEFAULT_OFFSET":"./lib/types","DEFAULT_SAVE_IN_RECENTS":"./lib/types"},"importAs":"@sourceloop/search-client"}