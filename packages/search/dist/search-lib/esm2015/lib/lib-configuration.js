export class Configuration {
    constructor(d) {
        var _a, _b, _c, _d, _e, _f;
        if (d.categorizeResults === false &&
            (d.hideCategorizeButton === false || d.hideCategorizeButton === undefined)) {
            throw new Error('You must provide hideCategorizeButton:true as categorizeResults is false');
        }
        if (d.saveInRecents === false && d.saveInRecentsOnlyOnEnter === true) {
            throw new Error('You must provide saveInRecents:true for saveInRecentsOnlyOnEnter:true');
        }
        this.displayPropertyName = d.displayPropertyName;
        this.models = d.models;
        this.placeholder = (_a = d.placeholder) !== null && _a !== void 0 ? _a : 'Search';
        /* IRequestParameters - will be given default values before call is made in case undefined/null,
        otherwise there ! is used on which sonar gives code smell */
        this.limit = d.limit;
        this.limitByType = d.limitByType;
        this.order = d.order;
        this.offset = d.offset;
        this.saveInRecents = d.saveInRecents;
        this.categorizeResults = (_b = d.categorizeResults) !== null && _b !== void 0 ? _b : true;
        this.hideRecentSearch = (_c = d.hideRecentSearch) !== null && _c !== void 0 ? _c : false;
        this.hideCategorizeButton = (_d = d.hideCategorizeButton) !== null && _d !== void 0 ? _d : false;
        this.saveInRecentsOnlyOnEnter = (_e = d.saveInRecentsOnlyOnEnter) !== null && _e !== void 0 ? _e : false;
        this.searchOnlyOnEnter = (_f = d.searchOnlyOnEnter) !== null && _f !== void 0 ? _f : false;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGliLWNvbmZpZ3VyYXRpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9zZWFyY2gtbGliL3NyYy9saWIvbGliLWNvbmZpZ3VyYXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsTUFBTSxPQUFPLGFBQWE7SUE0QnhCLFlBQVksQ0FBbUI7O1FBQzdCLElBQ0UsQ0FBQyxDQUFDLGlCQUFpQixLQUFLLEtBQUs7WUFDN0IsQ0FBQyxDQUFDLENBQUMsb0JBQW9CLEtBQUssS0FBSyxJQUFJLENBQUMsQ0FBQyxvQkFBb0IsS0FBSyxTQUFTLENBQUMsRUFDMUU7WUFDQSxNQUFNLElBQUksS0FBSyxDQUNiLDBFQUEwRSxDQUMzRSxDQUFDO1NBQ0g7UUFDRCxJQUFJLENBQUMsQ0FBQyxhQUFhLEtBQUssS0FBSyxJQUFJLENBQUMsQ0FBQyx3QkFBd0IsS0FBSyxJQUFJLEVBQUU7WUFDcEUsTUFBTSxJQUFJLEtBQUssQ0FDYix1RUFBdUUsQ0FDeEUsQ0FBQztTQUNIO1FBQ0QsSUFBSSxDQUFDLG1CQUFtQixHQUFHLENBQUMsQ0FBQyxtQkFBbUIsQ0FBQztRQUNqRCxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUM7UUFFdkIsSUFBSSxDQUFDLFdBQVcsR0FBRyxNQUFBLENBQUMsQ0FBQyxXQUFXLG1DQUFJLFFBQVEsQ0FBQztRQUM3QztvRUFDNEQ7UUFDNUQsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDO1FBQ3JCLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDLFdBQVcsQ0FBQztRQUNqQyxJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUM7UUFDckIsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxhQUFhLEdBQUcsQ0FBQyxDQUFDLGFBQWEsQ0FBQztRQUVyQyxJQUFJLENBQUMsaUJBQWlCLEdBQUcsTUFBQSxDQUFDLENBQUMsaUJBQWlCLG1DQUFJLElBQUksQ0FBQztRQUNyRCxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsTUFBQSxDQUFDLENBQUMsZ0JBQWdCLG1DQUFJLEtBQUssQ0FBQztRQUNwRCxJQUFJLENBQUMsb0JBQW9CLEdBQUcsTUFBQSxDQUFDLENBQUMsb0JBQW9CLG1DQUFJLEtBQUssQ0FBQztRQUM1RCxJQUFJLENBQUMsd0JBQXdCLEdBQUcsTUFBQSxDQUFDLENBQUMsd0JBQXdCLG1DQUFJLEtBQUssQ0FBQztRQUNwRSxJQUFJLENBQUMsaUJBQWlCLEdBQUcsTUFBQSxDQUFDLENBQUMsaUJBQWlCLG1DQUFJLEtBQUssQ0FBQztJQUN4RCxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0lEZWZhdWx0UmV0dXJuVHlwZSwgSU1vZGVsfSBmcm9tICcuL3R5cGVzJztcbmV4cG9ydCBjbGFzcyBDb25maWd1cmF0aW9uPFQgPSBJRGVmYXVsdFJldHVyblR5cGU+IHtcbiAgLyoqIHByb3BlcnR5IHRvIGJlIGRpc3BsYXllZCBpbiB0aGUgcmVzdWx0cyAqL1xuICBkaXNwbGF5UHJvcGVydHlOYW1lOiBrZXlvZiBUO1xuICAvKiogbGlzdCBvZiBtb2RlbCBjb25maWd1cmF0aW9uIHRvIGJlIHJlbmRlciBhbmQgY2F0ZWdvcml6ZSBzZWFyY2ggcmVzdWx0cyAqL1xuICBtb2RlbHM6IElNb2RlbFtdO1xuICAvKiogbWF4IG51bWJlciBvZiByZXN1bHRzIChiYXNlZCBvbiBsaW1pdEJ5VHlwZSBvcHRpb24pICovXG4gIGxpbWl0PzogbnVtYmVyO1xuICAvKiogYXBwbHkgbGltaXQgb24gaW5kaXZpZHVhbCBtb2RlbHMsIG9yIG9uIG92ZXJhbGwgcmVzdWx0cyAqL1xuICBsaW1pdEJ5VHlwZT86IGJvb2xlYW47XG4gIC8qKiBhcHBseSBhIHBhcnRpY3VsYXIgb3JkZXJpbmcgb24gcmVzdWx0cyAqL1xuICBvcmRlcj86IHN0cmluZ1tdO1xuICAvKiogb2Zmc2V0IGZvciByZXN1bHRzIGluIGNhc2UgbGltaXQgaXMgdXNlZCAqL1xuICBvZmZzZXQ/OiBudW1iZXI7XG4gIC8qKiBzYXZlIHRoZSBzZWFyY2ggcXVlcnkgaW4gcmVjZW50IGhpc3RvcnkgKi9cbiAgc2F2ZUluUmVjZW50cz86IGJvb2xlYW47XG4gIC8qKiBhIHBsYWNlaG9sZGVyIHRvIGRpc3BsYXkgaW4gdGhlIHNlYXJjaCBib3ggKi9cbiAgcGxhY2Vob2xkZXI/OiBzdHJpbmc7XG4gIC8qKiBjYXRlZ29yaXplIHJlc3VsdHMgb24gdGhlIGJhc2lzIG9mIG1vZGVscyBwcm92aWRlZCAqL1xuICBjYXRlZ29yaXplUmVzdWx0cz86IGJvb2xlYW47XG4gIC8qKiBoaWRlcyB0aGUgcmVjZW50IHNlYXJjaCBsaXN0ICovXG4gIGhpZGVSZWNlbnRTZWFyY2g/OiBib29sZWFuO1xuICAvKiogaGlkZSB0aGUgY2F0ZWdvcnkgc2VsZWN0aW9uIGJ1dHRvbiAqL1xuICBoaWRlQ2F0ZWdvcml6ZUJ1dHRvbj86IGJvb2xlYW47XG4gIC8qKiBzYXZlIHZhbHVlIGluIHJlY2VudCBzZWFyY2ggb25seSBvbiBlbnRlciBvciBjaGFuZ2UgaW4gY2F0ZWdvcnksIGlmIGZhbHNlLCBhbHNvIHNhdmVkIG9uIHR5cGluZyAqL1xuICBzYXZlSW5SZWNlbnRzT25seU9uRW50ZXI/OiBib29sZWFuO1xuICAvKiogc2VhcmNoIG9ubHkgb24gZW50ZXIga2V5IG9yIHdoZW4gY2F0ZWdvcnkgaXMgY2hhbmdlZCAqL1xuICBzZWFyY2hPbmx5T25FbnRlcj86IGJvb2xlYW47XG5cbiAgY29uc3RydWN0b3IoZDogQ29uZmlndXJhdGlvbjxUPikge1xuICAgIGlmIChcbiAgICAgIGQuY2F0ZWdvcml6ZVJlc3VsdHMgPT09IGZhbHNlICYmXG4gICAgICAoZC5oaWRlQ2F0ZWdvcml6ZUJ1dHRvbiA9PT0gZmFsc2UgfHwgZC5oaWRlQ2F0ZWdvcml6ZUJ1dHRvbiA9PT0gdW5kZWZpbmVkKVxuICAgICkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAnWW91IG11c3QgcHJvdmlkZSBoaWRlQ2F0ZWdvcml6ZUJ1dHRvbjp0cnVlIGFzIGNhdGVnb3JpemVSZXN1bHRzIGlzIGZhbHNlJyxcbiAgICAgICk7XG4gICAgfVxuICAgIGlmIChkLnNhdmVJblJlY2VudHMgPT09IGZhbHNlICYmIGQuc2F2ZUluUmVjZW50c09ubHlPbkVudGVyID09PSB0cnVlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdZb3UgbXVzdCBwcm92aWRlIHNhdmVJblJlY2VudHM6dHJ1ZSBmb3Igc2F2ZUluUmVjZW50c09ubHlPbkVudGVyOnRydWUnLFxuICAgICAgKTtcbiAgICB9XG4gICAgdGhpcy5kaXNwbGF5UHJvcGVydHlOYW1lID0gZC5kaXNwbGF5UHJvcGVydHlOYW1lO1xuICAgIHRoaXMubW9kZWxzID0gZC5tb2RlbHM7XG5cbiAgICB0aGlzLnBsYWNlaG9sZGVyID0gZC5wbGFjZWhvbGRlciA/PyAnU2VhcmNoJztcbiAgICAvKiBJUmVxdWVzdFBhcmFtZXRlcnMgLSB3aWxsIGJlIGdpdmVuIGRlZmF1bHQgdmFsdWVzIGJlZm9yZSBjYWxsIGlzIG1hZGUgaW4gY2FzZSB1bmRlZmluZWQvbnVsbCxcbiAgICBvdGhlcndpc2UgdGhlcmUgISBpcyB1c2VkIG9uIHdoaWNoIHNvbmFyIGdpdmVzIGNvZGUgc21lbGwgKi9cbiAgICB0aGlzLmxpbWl0ID0gZC5saW1pdDtcbiAgICB0aGlzLmxpbWl0QnlUeXBlID0gZC5saW1pdEJ5VHlwZTtcbiAgICB0aGlzLm9yZGVyID0gZC5vcmRlcjtcbiAgICB0aGlzLm9mZnNldCA9IGQub2Zmc2V0O1xuICAgIHRoaXMuc2F2ZUluUmVjZW50cyA9IGQuc2F2ZUluUmVjZW50cztcblxuICAgIHRoaXMuY2F0ZWdvcml6ZVJlc3VsdHMgPSBkLmNhdGVnb3JpemVSZXN1bHRzID8/IHRydWU7XG4gICAgdGhpcy5oaWRlUmVjZW50U2VhcmNoID0gZC5oaWRlUmVjZW50U2VhcmNoID8/IGZhbHNlO1xuICAgIHRoaXMuaGlkZUNhdGVnb3JpemVCdXR0b24gPSBkLmhpZGVDYXRlZ29yaXplQnV0dG9uID8/IGZhbHNlO1xuICAgIHRoaXMuc2F2ZUluUmVjZW50c09ubHlPbkVudGVyID0gZC5zYXZlSW5SZWNlbnRzT25seU9uRW50ZXIgPz8gZmFsc2U7XG4gICAgdGhpcy5zZWFyY2hPbmx5T25FbnRlciA9IGQuc2VhcmNoT25seU9uRW50ZXIgPz8gZmFsc2U7XG4gIH1cbn1cbiJdfQ==